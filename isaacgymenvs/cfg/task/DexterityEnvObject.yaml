# See schema in factory_schema_config_env.py for descriptions of common parameters.

defaults:
    - _self_
    - /dexterity_schema_config_env

env:
    env_name: 'DexterityEnvObject'
    object_sets_asset_root: '../../../../assets/dexterity/object_sets'
    object_sets:
        contactdb: []
        egad: []
        ycb: ['004_sugar_box', '005_tomato_soup_can', '006_mustard_bottle', '007_tuna_fish_can', '008_pudding_box', '009_gelatin_box', '010_potted_meat_can', '012_strawberry', '013_apple', '014_lemon', '015_peach', '016_pear', '017_orange', '018_plum', '022_windex_bottle', '026_sponge', '031_spoon', '032_knife', '033_spatula', '036_wood_block', '037_scissors', '038_padlock', '040_large_marker', '042_adjustable_wrench', '043_phillips_screwdriver', '044_flat_screwdriver', '050_medium_clamp', '054_softball', '056_tennis_ball', '057_racquetball', '061_foam_brick', '063-a_marbles', '063-b_marbles', '065-a_cups', '065-b_cups', '065-d_cups', '065-e_cups', '065-f_cups', '065-h_cups', '065-i_cups', '072-d_toy_airplane', '072-e_toy_airplane', '073-a_lego_duplo', '073-c_lego_duplo', '073-d_lego_duplo', '073-e_lego_duplo', '073-f_lego_duplo', '077_rubiks_cube']
        

    setup: 'real_robot'  # Should be in ['default', 'real_robot']

cameras:
    frontview:
        model: 'realsense_d455'
        pos: [ 0.28, 1.03, 0.4 ]
        quat: [ 0.271, 0.271, -0.653, 0.653 ]
        #fovx: 87
        #resolution: [1920, 1080]
        #image_type: 'rgb'

    #sideview:
    #    model: 'realsense_d455'
    #    pos: [ -0.334, 0.634, 0.356 ]
    #    quat: [ 0., 0.131, 0.0, 0.991 ]

    sideview:
        model: 'realsense_d455'
        pos: [ -0.329, 0.645, 0.311 ]
        # To get the right quaternion, you first have to go to the ROS coordinate system and then apply the transformation you get in tf_echo, i.e., quat_apply(ros_tf_quat, torch.Tensor([0.5, -0.5, 0.5, 0.5])).
        quat: [0.012, 0.124, -0.024, 0.992]
        # -90 um Y, 90 um Z

    rgb_sideview:
        pos: [ -0.329, 0.645, 0.311 ]
        quat: [0.012, 0.124, -0.024, 0.992]
        fovx: 87
        resolution: [1920, 1080]
        image_type: 'rgb'

    topview:
        model: 'realsense_d455'
        pos: [ -0.05, 0.645, 0.75 ]
        # To get the right quaternion, you first have to go to the ROS coordinate system and then apply the transformation you get in tf_echo, i.e., quat_apply(ros_tf_quat, torch.Tensor([0.5, -0.5, 0.5, 0.5])).
        quat: [0.0, 0.5, 0.0, 0.866]
        # -90 um Y, 90 um Z

    palmview:
        model: 'realsense_d405'
        pos: [ 0.0125, 0.038, 0.081 ]
        quat: [ -0.271, -0.653, 0.271, 0.653 ]  # 45 deg inclined downwards with the connector facing the wrist
        attach_to_body: 'palm'

    wristview_angeled_towards_palm:
        model: 'realsense_d405'
        pos: [ 0., 0.075, -0.06 ]
        quat: [ -0.092, -0.701, 0.092, 0.701 ]
        attach_to_body: 'palm'

    wristview:
        model: 'realsense_d405'
        pos: [ 0., 0.1, -0.1 ]
        quat: [ -0.183, -0.683, 0.183, 0.683 ]
        attach_to_body: 'palm'

    #topview:
    #    model: 'realsense_d455'
    #    pos: [ 0.572, 0.3707, 0.7785 ]
    #    quat: [ -0.647, 0.0, 0.762, 0. ]

    rgb_frontview:
        pos: [ 1.25, 0., 0.6 ]
        quat: [ -0.174, 0, 0.985, 0 ]
        fovx: 87
        resolution: [1920, 1080]
        image_type: 'rgb'

ros_cameras:
    l515:
        image_type: 'rgbxyz'

    d455:
        image_type: 'rgbxyz'
